#!/usr/bin/env bash
source common

### CONFIGURATION ###

### GDRIVE CONFIG ###
GD_URL=http://gg.gg/shagbag913_roms
GD_TESTURL=http://gg.gg/shagbag913_testbuilds

## Directories
GDIR1=/media/shagbag913/Roms/gdrive/Roms/AospExtended
GDIR2=/media/shagbag913/Roms/gdrive/Roms/DirtyUnicorns
GDIRTEST=/media/shagbag913/Roms/gdrive/TestBuilds

# Rom #1 Directory AND name of rom.
ROMDIR1=/media/shagbag913/Roms/roms/aex
NAME1="Aosp Extended"
ROMZIP1="AospExtended-v5.7-sailfish"

# Rom #2 Directory AND name of rom.
ROMDIR2=/media/shagbag913/Roms/roms/du
NAME2="Dirty Unicorns"
ROMZIP2=du_sailfish-v12

OUT="out/target/product/${DEVICE}"

# Functions
sync() {
  info "Syncing Up."
  if repo sync "${PAR_THREAD}" --no-tags --no-clone-bundle --force-sync -f -q; then
    info "Sync Successful!"
  else
    error "Sync Failed!"
  fi
}
clean() {
  info "Makin Clobber."
  cd "${ROMDIR1}"
  make clobber
  cd "${ROMDIR2}"
  make clobber
  if dc_chk; then dc_msg "Outputs Cleaned. These builds will take a while :grin:"; fi
}
brinch() {
  info "Brunching."
  . build/envsetup.sh
  brunch "${DEVICE}"
}
gdrive() {
  if grive_chk; then
    if [[ "${test}" != true ]]; then
      cp "$(ls -rt "${ROMDIR1}/${OUT}/${ROMZIP1}"*.zip  | tail -1)" "${GDIR1}"
      cp "$(ls -rt "${ROMDIR2}/${OUT}/${ROMZIP2}"*.zip  | tail -1)" "${GDIR2}"
	  cd "${GD_FOLDER}" && grive
      dc_msg "**Google Drive: Builds uploaded. ${GD_URL}**"
    else
      cp "$(ls -rt "${ROMDIR1}/${OUT}/${ROMZIP1}"*.zip  | tail -1)" "${GDIRTEST}"
      cp "$(ls -rt "${ROMDIR2}/${OUT}/${ROMZIP2}"*.zip  | tail -1)" "${GDIRTEST}"
      cd "${GD_FOLDER}" && grive
      dc_msg "**Google Drive: Test builds uploaded.** *Flash these at your own risk!* ${GD_TESTURL}"
    fi
  fi
}
gdrivepurge() {
  info "Cleaning GDrive Directories."
  for n in "${GDIR1}" "${GDIR2}"; do
    rm -rf $n/*
  done
  cd "${GD_FOLDER}"
  grive
  info "GDrive folders purged."
  if dc_chk; then dc_msg "**Google Drive: ROM's purged.**"; fi
}
gdrivepurgetest() {
  info "Cleaning GDrive Directories."
  rm -rf "${GDIRTEST}"/*
  cd "${GD_FOLDER}"
  grive
  info "GDrive folders purged."
  if dc_chk; then dc_msg "**Google Drive: test builds purged.**"; fi
}
autopilot() {
  cd "${ROMDIR1}"
  sync
  if dc_chk; then dc_msg "**Building ${NAME1}.**"; fi
  DATE_START1=$(date +"%s")
  . build/envsetup.sh
  lunch aosp_sailfish-userdebug
  make aex "${PAR_THREAD}" && ROM1=successful
  DATE_END1=$(date +"%s")
  DIFF1=$((DATE_END1 - DATE_START1))
    if dc_chk; then
      if [[ "${ROM1}" = successful ]]; then
        dc_msg "*Build Successful in $((DIFF1 / 60)) minute(s).*"
      else 
        dc_msg "*Build Failed in $((DIFF1 / 60)) minute(s).*"
      fi
    fi
  cd "${ROMDIR2}"
  sync
  if dc_chk; then dc_msg "**Building ${NAME2}.**"; fi
  DATE_START2=$(date +"%s")
  brinch && ROM2=successful
  DATE_END2=$(date +"%s")
  DIFF2=$((DATE_END2 - DATE_START2))
    if dc_chk; then
      if [[ "${ROM2}" = successful ]]; then
        dc_msg "*Build Succesful in $((DIFF2 / 60)) minute(s).*"
      else
        dc_msg "*Build Failed in $((DIFF2 / 60)) minute(s).*"
      fi
    fi
  gdrive
}

while [ "$#" -ge 1 ]; do
  case $1 in
    -s | --sync ) sync;;
    -c | --clean ) clean;;
    -a | --autopilot ) autopilot;;
    -p | --gdrivepurge ) gdrivepurge;;
    -tp | --gdrivetestpurge ) gdrivepurgetest;;
    -t | --test ) test=true;;
    * ) error "buildrom ${1} is not a supported command :/";;
  esac
shift
done
